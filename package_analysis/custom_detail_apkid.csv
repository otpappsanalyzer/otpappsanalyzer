app_name,class_dex,types,matches
com.nof.makanoh.openkeypos.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.DEVICE check']"
com.nof.makanoh.openkeypos.apk,classes.dex,compiler,['r8']
com.forgerock.authenticator.apk,classes.dex,compiler,['r8']
com.forgerock.authenticator.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.authy.authy.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible VM check']"
com.authy.authy.apk,classes.dex,compiler,['r8']
com.authy.authy.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.authy.authy.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.authy.authy.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
vn.unlimit.magicauth.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check']"
vn.unlimit.magicauth.apk,classes.dex,compiler,['r8']
vn.unlimit.magicauth.apk,classes2.dex,anti_vm,['Build.FINGERPRINT check']
vn.unlimit.magicauth.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
no.buypass.mobile.bpcode.bp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
no.buypass.mobile.bpcode.bp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
no.buypass.mobile.bpcode.bp.apk,classes.dex,compiler,['r8']
no.buypass.mobile.bpcode.bp.apk,classes2.dex,compiler,['r8']
com.cbcapp.otp.activity.apk,classes.dex,anti_vm,['subscriber ID check']
com.cbcapp.otp.activity.apk,classes.dex,compiler,['dx']
com.mastersam.android.mastersamotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check']"
com.mastersam.android.mastersamotp.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.mastersam.android.mastersamotp.apk,classes.dex,manipulator,['dexmerge']
com.egypt.ais.masriacard.mcmotp.apk,classes.dex,anti_vm,"['Build.HARDWARE check', 'Build.TAGS check']"
com.egypt.ais.masriacard.mcmotp.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.dreammirae.otp.android.mirae.multiid.market.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.dreammirae.otp.android.mirae.multiid.market.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check']"
com.dreammirae.otp.android.mirae.multiid.market.apk,classes.dex,compiler,['r8']
token.security.m2m.com.generateotp.apk,classes.dex,compiler,['dx (possible dexmerge)']
token.security.m2m.com.generateotp.apk,classes.dex,manipulator,['dexmerge']
com.deepnet.andmob5.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.deepnet.andmob5.apk,classes.dex,compiler,['r8']
com.deepnet.andmob5.apk,classes2.dex,compiler,['dx']
com.deepnet.andmob5.apk,res/raw/android_wear_micro_apk.apk!classes.dex,compiler,['r8']
hr.asseco.android.jimba.otpretailng.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
hr.asseco.android.jimba.otpretailng.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
hr.asseco.android.jimba.otpretailng.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.mts.opt2.apk,classes.dex,compiler,['r8']
com.inwebo.authenticator.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
com.inwebo.authenticator.apk,classes.dex,compiler,['dx']
net.secuwiz.prudentialotp.apk,classes.dex,compiler,['r8 without marker (suspicious)']
netinfo.eu.symantec.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
netinfo.eu.symantec.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'ro.hardware check', 'ro.kernel.qemu check', 'possible ro.secure check', 'possible VM check']"
netinfo.eu.symantec.apk,classes.dex,compiler,['r8 without marker (suspicious)']
netinfo.eu.symantec.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
br.com.powersoftware.otpsafe.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
br.com.powersoftware.otpsafe.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
br.com.powersoftware.otpsafe.apk,classes.dex,compiler,['r8']
com.canopus.otpmacgenerator.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check']"
com.canopus.otpmacgenerator.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.canopus.otpmacgenerator.apk,classes.dex,manipulator,['dexmerge']
hr.asseco.android.mtoken.ht.test.apk,classes.dex,compiler,['dx']
com.dreammirae.otp.android.mirae.apk,classes.dex,compiler,['dx']
it.aruba.pec.mobile.otpfvg.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
it.aruba.pec.mobile.otpfvg.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check']"
it.aruba.pec.mobile.otpfvg.apk,classes.dex,compiler,['r8']
com.feelanet.artstrongid.sec.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.feelanet.artstrongid.sec.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.feelanet.artstrongid.sec.apk,classes.dex,compiler,['r8']
com.aircuve.aircuvemobile.apk,classes.dex,anti_disassembly,['illegal class name']
com.aircuve.aircuvemobile.apk,classes.dex,anti_vm,"['possible Build.SERIAL check', 'Build.TAGS check', 'possible ro.secure check']"
com.aircuve.aircuvemobile.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.aircuve.aircuvemobile.apk,classes.dex,obfuscator,['DexGuard']
com.nhn.hangameotp.apk,,packer,['AppGuard (TOAST-NHNent)']
com.nhn.hangameotp.apk,classes.dex,anti_vm,"['Build.MANUFACTURER check', 'SIM operator check', 'network operator name check']"
com.nhn.hangameotp.apk,classes.dex,compiler,['dexlib 2.x']
it.aruba.pec.mobile.otp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
it.aruba.pec.mobile.otp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check']"
it.aruba.pec.mobile.otp.apk,classes.dex,compiler,['r8']
com.bankofamerica.authenticator.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.bankofamerica.authenticator.apk,classes.dex,compiler,['r8']
com.novoload.otp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.novoload.otp.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
com.novoload.otp.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.portwise.mid.clients.android.apk,classes.dex,compiler,['r8']
io.faceotp.faceotp.apk,assets/audience_network.dex,anti_debug,['Debug.isDebuggerConnected() check']
io.faceotp.faceotp.apk,assets/audience_network.dex,anti_vm,['possible Build.SERIAL check']
io.faceotp.faceotp.apk,assets/audience_network.dex,compiler,['unknown (please file detection issue!)']
io.faceotp.faceotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check']"
io.faceotp.faceotp.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.atsolution.android.uotp2.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.namirial.android.virtualotp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.namirial.android.virtualotp.apk,classes.dex,anti_disassembly,['illegal class name']
com.namirial.android.virtualotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible VM check']"
com.namirial.android.virtualotp.apk,classes.dex,compiler,['r8']
com.namirial.android.virtualotp.apk,classes.dex,obfuscator,['DexGuard']
com.mollatech.android.apps.authenticators.apk,classes.dex,compiler,['r8']
com.bncr.detectid_otp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.bncr.detectid_otp.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.bncr.detectid_otp.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.bncr.detectid_otp.apk,classes2.dex,anti_vm,['Build.MODEL check']
com.bncr.detectid_otp.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
it.previnet.authenticator.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
it.previnet.authenticator.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
it.previnet.authenticator.apk,classes.dex,compiler,['r8']
com.rcdevs.auth.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible VM check']"
com.rcdevs.auth.apk,classes.dex,compiler,['r8']
com.sgn.sgotp.apk,classes.dex,anti_vm,"['Build.MANUFACTURER check', 'network interface name check']"
com.sgn.sgotp.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.sgn.sgotp.apk,classes.dex,manipulator,['dexmerge']
kr.co.neople.neopleotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BRAND check', 'Build.DEVICE check', 'Build.PRODUCT check', 'network operator name check', 'possible VM check']"
kr.co.neople.neopleotp.apk,classes.dex,compiler,['r8']
kr.co.neople.neopleotp.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
kr.co.neople.neopleotp.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
kr.co.neople.neopleotp.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
eu.netinfo.netteller.cqur.motp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
eu.netinfo.netteller.cqur.motp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible ro.secure check']"
eu.netinfo.netteller.cqur.motp.apk,classes.dex,compiler,['r8']
club.nagavip.otp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check', 'possible VM check']"
club.nagavip.otp.apk,classes.dex,compiler,['r8']
ngn.com.vn.totp.apk,classes.dex,compiler,['dx (possible dexmerge)']
ngn.com.vn.totp.apk,classes.dex,manipulator,['dexmerge']
com.halcom.ng.mobile.puppaltr.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.halcom.ng.mobile.puppaltr.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
com.halcom.ng.mobile.puppaltr.apk,classes.dex,compiler,['dx']
com.halcom.ng.mobile.puppaltr.apk,classes.dex,obfuscator,['DexGuard']
com.halcom.ng.mobile.puppaltr.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.halcom.ng.mobile.puppaltr.apk,classes2.dex,anti_vm,['Build.FINGERPRINT check']
com.halcom.ng.mobile.puppaltr.apk,classes2.dex,compiler,['dx']
com.yubico.yubiclip.apk,classes.dex,compiler,['r8 without marker (suspicious)']
org.arcon.arcos.otp1.apk,classes.dex,compiler,['dx (possible dexmerge)']
org.arcon.arcos.otp1.apk,classes.dex,manipulator,['dexmerge']
ru.yandex.key.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'SIM operator check', 'network operator name check']"
ru.yandex.key.apk,classes.dex,compiler,['dx']
com.vietinbank.softotp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.vietinbank.softotp.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible ro.secure check']"
com.vietinbank.softotp.apk,classes.dex,compiler,['unknown (please file detection issue!)']
otl.snkl.SnorkelOTP.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check']"
otl.snkl.SnorkelOTP.apk,classes.dex,compiler,['dx']
de.sbeh.rdp_otp.apk,classes.dex,compiler,['r8']
cy.com.netinfo.crdbotp.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
cy.com.netinfo.crdbotp.apk,classes.dex,compiler,['unknown (please file detection issue!)']
hr.asseco.android.otp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check']"
hr.asseco.android.otp.apk,classes.dex,compiler,['dx']
com.GlowOTP.apk,classes.dex,anti_vm,"['Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.GlowOTP.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.aff.otpdirekt.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'possible VM check']"
com.aff.otpdirekt.apk,classes.dex,compiler,['r8']
com.aff.otpdirekt.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible ro.secure check', 'possible VM check']"
com.aff.otpdirekt.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.zenithbank.zenithetoken.apk,classes.dex,anti_vm,['Build.FINGERPRINT check']
com.zenithbank.zenithetoken.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.CIBEgyptSecureToken.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.CIBEgyptSecureToken.apk,classes.dex,compiler,['r8']
com.goldtime.authy.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.goldtime.authy.apk,classes.dex,compiler,['unknown (please file detection issue!)']
vn.tpb.token.baseotp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
vn.tpb.token.baseotp.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible ro.secure check']"
vn.tpb.token.baseotp.apk,classes.dex,compiler,['r8']
com.BankMisrSoftToken.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check']"
com.BankMisrSoftToken.apk,classes.dex,compiler,['r8']
com.sitin.sitinotp.apk,classes.dex,compiler,['r8']
com.protectimus.totpburner.nfc.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
com.protectimus.totpburner.nfc.apk,classes.dex,compiler,['r8']
com.protectimus.totpburner.nfc.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check']"
com.protectimus.totpburner.nfc.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.sgn.sgotp.lotte.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.sgn.sgotp.lotte.apk,classes.dex,manipulator,['dexmerge']
oracle.idm.mobile.authenticator.apk,classes.dex,anti_vm,['network operator name check']
oracle.idm.mobile.authenticator.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.sgn.secureguardotp.apk,classes.dex,compiler,['r8']
com.dreammirae.anyauth.android.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.dreammirae.anyauth.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible ro.secure check']"
com.dreammirae.anyauth.android.apk,classes.dex,compiler,['r8']
dev.cat.coffee.authenticator.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check']"
dev.cat.coffee.authenticator.apk,classes.dex,compiler,['r8']
dev.cat.coffee.authenticator.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check']"
dev.cat.coffee.authenticator.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.google.android.apps.authenticator2.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.google.android.apps.authenticator2.apk,classes.dex,compiler,['r8']
com.LuxTrustMobile.apk,,obfuscator,['Obfuscator-LLVM version 3.5']
com.LuxTrustMobile.apk,lib/arm64-v8a/liboehadnbnoemb.so,obfuscator,['Obfuscator-LLVM version 3.5']
com.LuxTrustMobile.apk,classes.dex,anti_vm,"['Build.MANUFACTURER check', 'possible Build.SERIAL check', 'possible VM check']"
com.LuxTrustMobile.apk,classes.dex,compiler,['dexlib 2.x']
com.LuxTrustMobile.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.LuxTrustMobile.apk,lib/armeabi-v7a/liboehadnbnoemb.so,obfuscator,['Obfuscator-LLVM version 3.5']
com.LuxTrustMobile.apk,classes4.dex,compiler,['dexlib 2.x']
com.LuxTrustMobile.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.LuxTrustMobile.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.LuxTrustMobile.apk,classes2.dex,compiler,['dexlib 2.x']
com.LuxTrustMobile.apk,classes3.dex,compiler,['dexlib 2.x']
sg.worktable.pingoauth.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
sg.worktable.pingoauth.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check']"
sg.worktable.pingoauth.apk,classes.dex,compiler,['r8']
vn.com.sacombank.msign.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.TAGS check']"
vn.com.sacombank.msign.apk,classes.dex,compiler,['dx']
com.kiwoom.unitycert.apk,,packer,['AppSuit']
com.kiwoom.unitycert.apk,classes.dex,anti_vm,['possible VM check']
com.kiwoom.unitycert.apk,classes.dex,compiler,['dexlib 2.x']
com.kiwoom.unitycert.apk,classes.dex,obfuscator,"['AppSuit', 'unreadable field names', 'unreadable method names']"
com.kiwoom.unitycert.apk,lib/armeabi-v7a/libAppSuit.so,anti_vm,['emulator file check']
com.kiwoom.unitycert.apk,lib/arm64-v8a/libAppSuit.so,anti_vm,['emulator file check']
com.techcombank.stk.corp.apk,,obfuscator,['Gemalto']
com.techcombank.stk.corp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.techcombank.stk.corp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'subscriber ID check']"
com.techcombank.stk.corp.apk,classes.dex,compiler,['r8']
com.techcombank.stk.corp.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
eu.netinfo.cdb.otp.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
eu.netinfo.cdb.otp.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.bitrixsoft.otp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
com.bitrixsoft.otp.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.bitrixsoft.otp.apk,classes.dex,manipulator,['dexmerge']
org.juanjcsr.newcloudotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'possible Build.SERIAL check']"
org.juanjcsr.newcloudotp.apk,classes.dex,compiler,['dx']
com.square_enix_software_token.apk,classes.dex,anti_vm,"['Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.square_enix_software_token.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.trumotp.club.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'network operator name check', 'possible VM check']"
com.trumotp.club.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.trumotp.club.apk,classes.dex,manipulator,['dexmerge']
com.gemalto.idprove.apk,classes.dex,anti_vm,"['possible Build.SERIAL check', 'Build.TAGS check', 'subscriber ID check']"
com.gemalto.idprove.apk,classes.dex,compiler,['dx']
com.ncb.bank.otp.apk,classes.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.TAGS check', 'possible ro.secure check']"
com.ncb.bank.otp.apk,classes.dex,compiler,['r8']
org.cry.otp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
org.cry.otp.apk,classes.dex,compiler,['r8']
me.jmh.authenticatorpro.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'possible VM check']"
me.jmh.authenticatorpro.apk,classes.dex,compiler,['unknown (please file detection issue!)']
wibmo.com.wibmoAuthApp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
wibmo.com.wibmoAuthApp.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'possible ro.secure check', 'possible VM check']"
wibmo.com.wibmoAuthApp.apk,classes.dex,compiler,['dx']
vn.com.bidv.softotp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
vn.com.bidv.softotp.apk,classes.dex,anti_disassembly,['illegal class name']
vn.com.bidv.softotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
vn.com.bidv.softotp.apk,classes.dex,compiler,['dx']
vn.com.bidv.softotp.apk,classes.dex,obfuscator,['DexGuard']
it.company.sielte.apk,classes.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.HARDWARE check', 'possible VM check']"
it.company.sielte.apk,classes.dex,compiler,['r8']
com.u2fa.secur.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
com.u2fa.secur.apk,classes.dex,compiler,['unknown (please file detection issue!)']
eu.sia.siaotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check']"
eu.sia.siaotp.apk,classes.dex,compiler,['dx']
br.gov.caixa.codigocaixa.apk,classes.dex,compiler,['r8 without marker (suspicious)']
nh.smart.signone.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'SIM operator check', 'network operator name check', 'subscriber ID check']"
nh.smart.signone.apk,classes3.dex,compiler,['dexlib 2.x']
nh.smart.signone.apk,classes3.dex,obfuscator,['unreadable field names']
nh.smart.signone.apk,classes2.dex,compiler,['dexlib 2.x']
nh.smart.signone.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
nh.smart.signone.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check', 'SIM operator check', 'network operator name check', 'device ID check', 'subscriber ID check', 'possible VM check']"
nh.smart.signone.apk,classes.dex,compiler,['dexlib 2.x']
nh.smart.signone.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.isprint.SWIFTToken.apk,classes.dex,compiler,['dx']
com.isprint.SWIFTToken.apk,lib/armeabi/libmap.so,anti_vm,['emulator file check']
com.dxc.ipwr.apk,classes.dex,compiler,['dx']
com.vn.vib.smeotp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.vn.vib.smeotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.vn.vib.smeotp.apk,classes.dex,compiler,['unknown (please file detection issue!)']
org.fedorahosted.freeotp.apk,classes.dex,compiler,['dx (possible dexmerge)']
org.fedorahosted.freeotp.apk,classes.dex,manipulator,['dexmerge']
sk.otp.viamo.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
sk.otp.viamo.apk,classes.dex,compiler,['r8']
com.sbi.SBISecure.apk,,packer,['Kony']
com.sbi.SBISecure.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check', 'possible ro.secure check']"
com.sbi.SBISecure.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.sbi.SBISecure.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.sbi.SBISecure.apk,lib/armeabi-v7a/libkonyjsvm.so,obfuscator,['Arxan']
com.yubico.yubioath.apk,classes.dex,compiler,['unknown (please file detection issue!)']
tdb.otp.apk,classes.dex,compiler,['r8 without marker (suspicious)']
tm.asmanoky.otp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
tm.asmanoky.otp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check']"
tm.asmanoky.otp.apk,classes.dex,compiler,['r8']
no.SpareBank1.MobileOTP.apk,,obfuscator,['Obfuscator-LLVM version 3.5']
no.SpareBank1.MobileOTP.apk,lib/armeabi-v7a/libojacambhopop.so,obfuscator,['Obfuscator-LLVM version 3.5']
no.SpareBank1.MobileOTP.apk,lib/arm64-v8a/libojacambhopop.so,obfuscator,['Obfuscator-LLVM version 3.5']
no.SpareBank1.MobileOTP.apk,lib/x86/libojacambhopop.so,obfuscator,['Obfuscator-LLVM version 3.5']
no.SpareBank1.MobileOTP.apk,lib/x86_64/libojacambhopop.so,obfuscator,['Obfuscator-LLVM version 3.5']
no.SpareBank1.MobileOTP.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
no.SpareBank1.MobileOTP.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check']"
no.SpareBank1.MobileOTP.apk,classes.dex,compiler,['dexlib 2.x']
no.SpareBank1.MobileOTP.apk,classes.dex,obfuscator,"['Gemalto', 'unreadable field names', 'unreadable method names']"
at.tugraz.iaik.signapp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
at.tugraz.iaik.signapp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check']"
at.tugraz.iaik.signapp.apk,classes.dex,compiler,['r8']
eu.sebbe.www.qrsa.apk,classes.dex,compiler,['dx']
com.ca.sec.aa.authenticator.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
com.ca.sec.aa.authenticator.apk,classes.dex,compiler,['r8']
com.ncs.secureconnect.otp.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.ncs.secureconnect.otp.apk,classes.dex,manipulator,['dexmerge']
com.ftsafe.otp.activity.apk,,packer,"[""Tencent's Legu""]"
com.ftsafe.otp.activity.apk,classes.dex,anti_disassembly,"['non-zero link size', 'non-zero link offset']"
com.ftsafe.otp.activity.apk,classes.dex,compiler,['dexlib 2.x']
com.ftsafe.otp.activity.apk,classes.dex,packer,['Mobile Tencent Protect']
kr.kjun.NaverSetup.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.DEVICE check', 'Build.PRODUCT check']"
kr.kjun.NaverSetup.apk,classes.dex,compiler,['dx']
iSec.Authenticator.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'network operator name check']"
iSec.Authenticator.apk,classes.dex,compiler,['dx']
com.ws.a.otp.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.ws.a.otp.apk,classes.dex,manipulator,['dexmerge']
ro.len.mobile.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
ro.len.mobile.apk,classes.dex,compiler,['dx (possible dexmerge)']
ro.len.mobile.apk,classes.dex,manipulator,['dexmerge']
com.protectimus.android.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.protectimus.android.apk,res/raw/android_wear_micro_apk.apk!classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.protectimus.android.apk,res/raw/android_wear_micro_apk.apk!classes.dex,anti_vm,['Build.FINGERPRINT check']
com.protectimus.android.apk,res/raw/android_wear_micro_apk.apk!classes.dex,compiler,['r8 without marker (suspicious)']
com.systemat.SeeZam_OTP.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.systemat.SeeZam_OTP.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.systemat.SeeZam_OTP.apk,classes.dex,compiler,['r8']
com.vivokey.vivoauth.apk,classes.dex,compiler,['dx']
com.kmcert.myotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'possible VM check']"
com.kmcert.myotp.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.kmcert.myotp.apk,classes.dex,manipulator,['dexmerge']
com.kmcert.myotp.apk,lib/arm64-v8a/libAppIron-jni_v2.9.1.so,anti_vm,['possible VM check']
com.kmcert.myotp.apk,lib/armeabi-v7a/libAppIron-jni_v2.9.1.so,anti_vm,['possible VM check']
com.kmcert.myotp.apk,lib/armeabi/libAppIron-jni_v2.9.1.so,anti_vm,['possible VM check']
com.kmcert.myotp.apk,lib/x86/libAppIron-jni_v2.9.1.so,anti_vm,['possible VM check']
com.kmcert.myotp.apk,lib/x86_64/libAppIron-jni_v2.9.1.so,anti_vm,['possible VM check']
com.mobilians.motp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.mobilians.motp.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.mobilians.motp.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.vtc.main.otpapp.apk,classes.dex,compiler,['dx']
org.shadowice.flocke.andotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
org.shadowice.flocke.andotp.apk,classes.dex,compiler,['r8']
org.shadowice.flocke.andotp.apk,classes2.dex,compiler,['r8']
com.arcot.otp1.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible VM check']"
com.arcot.otp1.apk,classes.dex,compiler,['dx']
teakwang.tsis.motp.apk,classes.dex,anti_vm,"['Build.TAGS check', 'possible ro.secure check']"
teakwang.tsis.motp.apk,classes.dex,compiler,['dx']
com.jeptoken.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.jeptoken.apk,classes.dex,compiler,['unknown (please file detection issue!)']
ar.gob.afip.mobile.android.internal.seginfo.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
ar.gob.afip.mobile.android.internal.seginfo.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
ar.gob.afip.mobile.android.internal.seginfo.apk,classes.dex,compiler,['r8']
com.ADIBSDIGIPASS.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check']"
com.ADIBSDIGIPASS.apk,classes.dex,compiler,['r8']
com.pentasecurity.isignplus.mobileotp.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
com.pentasecurity.isignplus.mobileotp.apk,classes.dex,compiler,['r8']
com.gstotpauthenticator.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.gstotpauthenticator.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.gstotpauthenticator.apk,classes.dex,compiler,['r8']
com.hidglobal.ia.token.generic.apk,classes.dex,compiler,['dexlib 2.x']
com.eset.esa.apk,classes.dex,compiler,['dx']
com.Sigma.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.Sigma.apk,classes.dex,manipulator,['dexmerge']
de.otp.main.apk,classes.dex,anti_vm,['Build.FINGERPRINT check']
de.otp.main.apk,classes.dex,compiler,['r8 without marker (suspicious)']
org.liberty.android.freeotpplus.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
org.liberty.android.freeotpplus.apk,classes.dex,compiler,['r8']
vn.funtap.smartotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.TAGS check']"
vn.funtap.smartotp.apk,classes.dex,compiler,['r8']
vn.funtap.smartotp.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check']"
vn.funtap.smartotp.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.beemdevelopment.aegis.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.beemdevelopment.aegis.apk,classes.dex,compiler,['r8']
com.beemdevelopment.aegis.apk,classes2.dex,compiler,['r8']
ua.com.cs.ifobs.mobile.android.otp.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
ua.com.cs.ifobs.mobile.android.otp.apk,classes.dex,compiler,['r8']
ua.com.cs.ifobs.mobile.android.otp.apk,classes.dex,obfuscator,['DexGuard']
ua.com.cs.ifobs.mobile.android.otp.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
ua.com.cs.ifobs.mobile.android.otp.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
ua.com.cs.ifobs.mobile.android.otp.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.khla.otpapp.callhttpclient.apk,classes.dex,anti_vm,"['Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.khla.otpapp.callhttpclient.apk,classes.dex,compiler,['dx']
org.kamrul.android.myauth.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
org.kamrul.android.myauth.apk,classes.dex,compiler,['r8']
otl.snkl.HDFCSnorkelOTP.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check']"
otl.snkl.HDFCSnorkelOTP.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.mds.canarabankapp.apk,classes.dex,anti_vm,['Build.TAGS check']
com.mds.canarabankapp.apk,classes.dex,compiler,['r8']
com.netfiles.netfilesotp.apk,classes.dex,compiler,['r8 without marker (suspicious)']
it.uiv.uivotp.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.pvcombank.smartotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'device ID check', 'subscriber ID check', 'ro.hardware check', 'ro.product.device check', 'ro.kernel.qemu check', 'emulator file check', 'possible VM check']"
com.pvcombank.smartotp.apk,classes.dex,compiler,['r8']
com.pvcombank.smartotp.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
eu.netinfo.bcb.otp.apk,classes.dex,anti_vm,['Build.MANUFACTURER check']
eu.netinfo.bcb.otp.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.net2recharge.otp.apk,classes.dex,compiler,['r8']
com.entrust.identityGuard.mobile.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible ro.secure check']"
com.entrust.identityGuard.mobile.apk,classes.dex,compiler,['r8']
com.stove.otp.google.android.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check']"
com.stove.otp.google.android.apk,classes.dex,compiler,['r8']
com.stove.otp.google.android.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.FAISATOKEN.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check']"
com.FAISATOKEN.apk,classes.dex,compiler,['r8']
com.sophos.sophtoken.apk,classes.dex,anti_vm,"['Build.HARDWARE check', 'Build.TAGS check']"
com.sophos.sophtoken.apk,classes.dex,compiler,['r8']
com.BANKABC.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check']"
com.BANKABC.apk,classes.dex,compiler,['r8']
com.pozitron.qib.apk,,packer,['DexProtector']
com.pozitron.qib.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'possible Build.SERIAL check']"
com.pozitron.qib.apk,classes.dex,compiler,['dx']
com.pozitron.qib.apk,classes2.dex,anti_vm,"['Build.MANUFACTURER check', 'possible Build.SERIAL check']"
com.pozitron.qib.apk,classes2.dex,compiler,['dx']
com.pozitron.qib.apk,classes3.dex,anti_vm,['Build.MANUFACTURER check']
com.pozitron.qib.apk,classes3.dex,compiler,['dx']
com.pozitron.qib.apk,classes4.dex,compiler,['dx']
com.pozitron.qib.apk,classes5.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
com.pozitron.qib.apk,classes5.dex,compiler,['dx']
com.pozitron.qib.apk,classes6.dex,compiler,['dx']
com18deglab.cylocklite.apk,classes.dex,compiler,['dx']
com.mdmobiasbancadigipass.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.mdmobiasbancadigipass.apk,classes.dex,compiler,['r8']
com.vpbank.vpbanksmartotp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.vpbank.vpbanksmartotp.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible ro.secure check']"
com.vpbank.vpbanksmartotp.apk,classes.dex,compiler,['r8']
com.changingtec.motp.pro.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.changingtec.motp.pro.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check']"
com.changingtec.motp.pro.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.aircuve.motpkey_miraeasset.apk,classes.dex,compiler,['dx']
com.pacifico.pacificid.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.BRAND check', 'Build.DEVICE check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'network operator name check']"
com.pacifico.pacificid.apk,classes.dex,compiler,['r8 without marker (suspicious)']
com.pacifico.pacificid.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.pacifico.pacificid.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.andxor.mobile.jsotp.piteco.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.andxor.mobile.jsotp.piteco.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check']"
com.andxor.mobile.jsotp.piteco.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.andxor.mobile.jsotp.piteco.apk,classes.dex,manipulator,['dexmerge']
net.marinits.android.droidotp.apk,classes.dex,compiler,['dx']
vn.com.eximbank.softotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check']"
vn.com.eximbank.softotp.apk,classes.dex,compiler,['r8']
vn.com.eximbank.softotp.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'Build.TAGS check', 'possible ro.secure check']"
vn.com.eximbank.softotp.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.lenovo.otp.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.aircuve.airotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check']"
com.aircuve.airotp.apk,classes.dex,compiler,['r8']
com.kienlongbank.etoken.apk,classes.dex,anti_disassembly,['illegal class name']
com.kienlongbank.etoken.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'network operator name check', 'possible ro.secure check']"
com.kienlongbank.etoken.apk,classes.dex,compiler,['dx']
hr.asseco.android.intesa.isbd.alex.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
hr.asseco.android.intesa.isbd.alex.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check']"
hr.asseco.android.intesa.isbd.alex.apk,classes2.dex,compiler,['r8']
hr.asseco.android.intesa.isbd.alex.apk,classes3.dex,anti_vm,"['Build.MANUFACTURER check', 'Build.HARDWARE check']"
hr.asseco.android.intesa.isbd.alex.apk,classes3.dex,compiler,['r8']
hr.asseco.android.intesa.isbd.alex.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check', 'SIM operator check', 'ro.kernel.qemu check', 'possible VM check']"
hr.asseco.android.intesa.isbd.alex.apk,classes.dex,compiler,['r8']
com.ezmcom.cimb.softtoken.ezidv4.apk,classes.dex,anti_disassembly,['illegal class name']
com.ezmcom.cimb.softtoken.ezidv4.apk,classes.dex,compiler,['dexlib 2.x']
com.ezmcom.cimb.softtoken.ezidv4.apk,classes.dex,obfuscator,['DexGuard']
it.netknights.piauthenticator.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check']"
it.netknights.piauthenticator.apk,classes.dex,compiler,['r8']
jp.konami.android.otp_token.apk,classes.dex,compiler,['dx']
com.cibcorptoken.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.cibcorptoken.apk,classes.dex,compiler,['r8']
com.securekiotp.apk,classes.dex,compiler,['dx (possible dexmerge)']
com.securekiotp.apk,classes.dex,manipulator,['dexmerge']
com.viafirma.otp.apk,classes.dex,compiler,['dx']
vn.savis.smartid.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
vn.savis.smartid.apk,classes.dex,compiler,['r8']
net.aftnet.OTPManager.apk,classes.dex,compiler,['dx']
com.ocb.iotp.apk,,obfuscator,['Obfuscator-LLVM version 3.5']
com.ocb.iotp.apk,lib/armeabi-v7a/libpcdjcjjneceh.so,obfuscator,['Obfuscator-LLVM version 3.5']
com.ocb.iotp.apk,lib/arm64-v8a/libpcdjcjjneceh.so,obfuscator,['Obfuscator-LLVM version 3.5']
com.ocb.iotp.apk,lib/x86/libpcdjcjjneceh.so,obfuscator,['Obfuscator-LLVM version 3.5']
com.ocb.iotp.apk,lib/x86_64/libpcdjcjjneceh.so,obfuscator,['Obfuscator-LLVM version 3.5']
com.ocb.iotp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.ocb.iotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'possible VM check']"
com.ocb.iotp.apk,classes.dex,compiler,['dexlib 2.x']
com.ocb.iotp.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.ocb.iotp.apk,classes2.dex,anti_vm,"['possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
com.ocb.iotp.apk,classes2.dex,compiler,['dexlib 2.x']
com.azure.authenticator.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.azure.authenticator.apk,classes.dex,compiler,['r8']
com.azure.authenticator.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'network operator name check']"
com.azure.authenticator.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.azure.authenticator.apk,classes3.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.azure.authenticator.apk,classes3.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check', 'possible Build.SERIAL check']"
com.azure.authenticator.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
com.azure.authenticator.apk,classes4.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.BOARD check']"
com.azure.authenticator.apk,classes4.dex,compiler,['r8 without marker (suspicious)']
two.factor.secure.otp.authentication.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible VM check']"
two.factor.secure.otp.authentication.apk,classes.dex,compiler,['r8']
two.factor.secure.otp.authentication.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
vietcombank.itcenter.vcbsmartoptv10.apk,,obfuscator,['Obfuscator-LLVM version 3.5']
vietcombank.itcenter.vcbsmartoptv10.apk,lib/armeabi-v7a/libkcjnanliinlo.so,obfuscator,['Obfuscator-LLVM version 3.5']
vietcombank.itcenter.vcbsmartoptv10.apk,lib/x86/libkcjnanliinlo.so,obfuscator,['Obfuscator-LLVM version 3.5']
vietcombank.itcenter.vcbsmartoptv10.apk,lib/x86_64/libkcjnanliinlo.so,obfuscator,['Obfuscator-LLVM version 3.5']
vietcombank.itcenter.vcbsmartoptv10.apk,lib/arm64-v8a/libkcjnanliinlo.so,obfuscator,['Obfuscator-LLVM version 3.5']
vietcombank.itcenter.vcbsmartoptv10.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
vietcombank.itcenter.vcbsmartoptv10.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'possible Build.SERIAL check', 'possible VM check']"
vietcombank.itcenter.vcbsmartoptv10.apk,classes.dex,compiler,['dexlib 2.x']
vietcombank.itcenter.vcbsmartoptv10.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
vietcombank.itcenter.vcbsmartoptv10.apk,classes2.dex,anti_vm,"['possible Build.SERIAL check', 'possible VM check']"
vietcombank.itcenter.vcbsmartoptv10.apk,classes2.dex,compiler,['dexlib 2.x']
jp.co.nttdata.onetimepassworda.apk,classes.dex,anti_vm,"['Build.MODEL check', 'possible Build.SERIAL check']"
jp.co.nttdata.onetimepassworda.apk,classes.dex,compiler,['r8']
jp.co.nttdata.onetimepassworda.apk,res/raw/jcmandroidfips.raw!classes.dex,compiler,['dx']
com.hpe.icewall.smartotp.apk,classes.dex,compiler,['r8']
com.scrignosa.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'possible Build.SERIAL check', 'Build.TAGS check']"
com.scrignosa.apk,classes.dex,compiler,['r8']
com.canopus.otpmacgenerator.finductive.apk,classes.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes10.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes11.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes12.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes13.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes14.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes15.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes16.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes17.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes18.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes19.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes2.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes20.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes21.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes22.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes23.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes24.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes25.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes26.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes27.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes28.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes29.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes3.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes30.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes31.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes32.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes33.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes34.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes35.dex,anti_vm,['possible VM check']
com.canopus.otpmacgenerator.finductive.apk,classes35.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes36.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes37.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes38.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes39.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes4.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes40.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes41.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes42.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes43.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes44.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes45.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes46.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes47.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes48.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes49.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes5.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes50.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes51.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes52.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes53.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes54.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes55.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes56.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes57.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.canopus.otpmacgenerator.finductive.apk,classes57.dex,anti_vm,"['Build.MODEL check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible VM check']"
com.canopus.otpmacgenerator.finductive.apk,classes57.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes58.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes59.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes6.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes60.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes61.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes7.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes8.dex,compiler,['dx']
com.canopus.otpmacgenerator.finductive.apk,classes9.dex,compiler,['dx']
vn.mk.token.baseotp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
vn.mk.token.baseotp.apk,classes.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible ro.secure check']"
vn.mk.token.baseotp.apk,classes.dex,compiler,['r8']
br.com.voegol.tokenagenciasgol.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'network operator name check']"
br.com.voegol.tokenagenciasgol.apk,classes.dex,compiler,['dx']
br.com.voegol.tokenagenciasgol.apk,classes2.dex,anti_vm,"['Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check']"
br.com.voegol.tokenagenciasgol.apk,classes2.dex,compiler,['dx']
com.qrail.token.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.qrail.token.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'ro.hardware check', 'ro.product.device check', 'ro.kernel.qemu check', 'emulator file check']"
com.qrail.token.apk,classes.dex,compiler,['dx']
com.qrail.token.apk,classes.dex,obfuscator,['DexGuard']
com.ideasventure.otptoken.apk,classes.dex,compiler,['dx']
com.sbi.SBIFreedomPlus.apk,,packer,['Kony']
com.sbi.SBIFreedomPlus.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'possible Build.SERIAL check', 'device ID check', 'possible ro.secure check']"
com.sbi.SBIFreedomPlus.apk,classes.dex,compiler,['dx']
com.sbi.SBIFreedomPlus.apk,classes.dex,obfuscator,"['unreadable field names', 'unreadable method names']"
com.sbi.SBIFreedomPlus.apk,classes2.dex,compiler,['dx']
com.sbi.SBIFreedomPlus.apk,res/raw/wear.apk!classes.dex,compiler,['r8']
kr.or.kftc.fsc.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
kr.or.kftc.fsc.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.BOARD check', 'possible Build.SERIAL check', 'Build.TAGS check', 'possible VM check']"
kr.or.kftc.fsc.apk,classes.dex,compiler,['dexlib 2.x']
kr.or.kftc.fsc.apk,classes.dex,obfuscator,['unreadable method names']
kr.or.kftc.fsc.apk,assets/.79e3c56b413c45327dab411322609ed4.dex,anti_disassembly,"['non-zero link size', 'non-zero link offset']"
kr.or.kftc.fsc.apk,assets/.79e3c56b413c45327dab411322609ed4.dex,compiler,['unknown (please file detection issue!)']
com.egypt.ais.aismotp.apk,classes.dex,compiler,['unknown (please file detection issue!)']
org.arcon.pam.otp.apk,classes.dex,compiler,['unknown (please file detection issue!)']
com.lpb.softotp.apk,classes.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.lpb.softotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.TAGS check', 'possible ro.secure check']"
com.lpb.softotp.apk,classes.dex,compiler,['r8']
com.atsolution.android.bcotp.apk,classes.dex,compiler,['r8']
com.authenticator.authservice2.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MANUFACTURER check', 'Build.HARDWARE check', 'Build.TAGS check']"
com.authenticator.authservice2.apk,classes.dex,compiler,['r8']
com.authenticator.authservice2.apk,classes2.dex,anti_debug,['Debug.isDebuggerConnected() check']
com.authenticator.authservice2.apk,classes2.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.BOARD check', 'Build.TAGS check', 'possible VM check']"
com.authenticator.authservice2.apk,classes2.dex,compiler,['r8 without marker (suspicious)']
com.authenticator.authservice2.apk,classes3.dex,compiler,['r8 without marker (suspicious)']
cy.nbg.nbgcyotp.apk,classes.dex,anti_vm,"['Build.FINGERPRINT check', 'Build.MODEL check', 'Build.MANUFACTURER check', 'Build.PRODUCT check', 'Build.HARDWARE check', 'Build.TAGS check', 'possible ro.secure check']"
cy.nbg.nbgcyotp.apk,classes.dex,compiler,['r8']
